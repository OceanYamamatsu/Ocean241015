
local signalState = {false, false, false, false}  -- 信号1～信号4の状態を保持
local currentSignal = 1  -- 現在の信号番号（1から開始）
local buttonPressed = false  -- ボタンの押下状態を保持

function onTick()
    -- ボタン1が押されたかチェック
    local button1 = input.getBool(1)  -- ボタン1の状態を取得
    local button2 = input.getBool(2)  -- ボタン2の状態を取得

    -- ボタン1が押されたとき、前の押下状態と異なるなら
    if button1 and not buttonPressed then
        -- 現在の信号のみをtrueにし、他はfalseにリセット
        for i = 1, 4 do
            signalState[i] = (i == currentSignal)
        end
        
        -- 次の信号に切り替えるための準備
        currentSignal = currentSignal + 1
        if currentSignal > 4 then
            currentSignal = 1  -- 信号4まで行ったら信号1に戻る
        end
    end

    -- ボタン1が離されたかどうかを記録
    buttonPressed = button1

    -- ボタン2が押された場合、一番大きいtrueの信号をfalseにする
    if button2 then
        for i = #signalState, 1, -1 do  -- 信号4から信号1までチェック
            if signalState[i] then
                signalState[i] = false  -- trueの信号をfalseにする
                break  -- 一つだけリセットして終了
            end
        end
    end

    -- 各信号を個別に出力
    output.setBool(1, signalState[1])  -- 信号1の状態を出力
    output.setBool(2, signalState[2])  -- 信号2の状態を出力
    output.setBool(3, signalState[3])  -- 信号3の状態を出力
    output.setBool(4, signalState[4])  -- 信号4の状態を出力
end